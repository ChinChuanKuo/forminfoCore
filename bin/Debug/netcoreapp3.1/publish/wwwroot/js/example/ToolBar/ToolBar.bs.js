// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as AppBar$BtsCore from "../../material-ui/core/AppBar/AppBar.bs.js";
import * as Tooltip$BtsCore from "../../material-ui/core/Tooltip/Tooltip.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuIcon$BtsCore from "../../material-ui/core/MenuItem/MenuIcon.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../Boards/BackgroundBoard.bs.js";

function reducer(state, action) {
  if (typeof action === "number") {
    if (action !== 0) {
      return {
              outValue: state.outValue,
              showOut: state.showOut,
              outitems: state.outitems,
              showMore: !state.showMore
            };
    } else {
      return {
              outValue: state.outValue,
              showOut: !state.showOut,
              outitems: state.outitems,
              showMore: state.showMore
            };
    }
  } else {
    return {
            outValue: action[0],
            showOut: false,
            outitems: state.outitems,
            showMore: state.showMore
          };
  }
}

var initialState_outitems = [
  {
    disablePadding: false,
    icon: "",
    value: "微軟正黑體"
  },
  {
    disablePadding: false,
    icon: "",
    value: "新細明體"
  },
  {
    disablePadding: false,
    icon: "",
    value: "細明體"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Sans Serif"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Serif"
  },
  {
    disablePadding: false,
    icon: "",
    value: "等寬字型"
  },
  {
    disablePadding: false,
    icon: "",
    value: "寬"
  },
  {
    disablePadding: false,
    icon: "",
    value: "窄"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Comic Sans MS"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Garamond"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Georgia"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Tahoma"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Trebuchet MS"
  },
  {
    disablePadding: false,
    icon: "",
    value: "Verdana"
  }
];

var initialState = {
  outValue: "Sans Serif",
  showOut: false,
  outitems: initialState_outitems,
  showMore: false
};

function ToolBar(Props) {
  var disabled = Props.disabled;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var clickOutShow = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowOut */0);
        }));
  var clickItemOutValue = React.useCallback((function (value) {
          console.log(value);
          Curry._1(dispatch, /* ClickItemOutValue */[value]);
          document.execCommand("fontName", false, value);
          
        }));
  var clickFormatSize = React.useCallback((function (param) {
          document.execCommand("fontSize", false, "30px");
          
        }));
  var clickFormatBold = React.useCallback((function (param) {
          document.execCommand("bold", false, "");
          
        }));
  var clickFormatItalic = React.useCallback((function (param) {
          document.execCommand("italic", false, "");
          
        }));
  var clickFormatUnderlined = React.useCallback((function (param) {
          document.execCommand("underline", false, "");
          
        }));
  var clickStrikethrough = React.useCallback((function (param) {
          document.execCommand("strikethrough", false, "");
          
        }));
  var clickFormatAlignLeft = React.useCallback((function (param) {
          document.execCommand("justifyLeft", false, "");
          
        }));
  var clickFormatAlignCenter = React.useCallback((function (param) {
          document.execCommand("justifyCenter", false, "");
          
        }));
  var clickFormatAlignRight = React.useCallback((function (param) {
          document.execCommand("justifyRight", false, "");
          
        }));
  var clickFormatListNumbered = React.useCallback((function (param) {
          document.execCommand("insertorderedlist", false, "");
          
        }));
  var clickMoreShow = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowMore */1);
        }));
  React.useCallback((function (param) {
          document.execCommand("removeFormat", false, "");
          
        }));
  return React.createElement(AppBar$BtsCore.make, {
              backgroundColor: "rgba(255,255,255,1)",
              position: "relative",
              minHeight: "40",
              children: React.createElement(GridContainer$BtsCore.make, {
                    direction: "rowReverse",
                    justify: "end",
                    alignItem: "stretch",
                    children: null
                  }, React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickMoreShow,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "MoreSetting"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.arrowDownBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        style: {
                          borderRight: "1px solid rgba(0,0,0,0.08)",
                          height: "25px",
                          marginTop: "6px",
                          marginRight: "3px"
                        },
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "3",
                        xs: "no",
                        children: null
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatListNumbered,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "ListNumber"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatListNumberedBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatAlignRight,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "AlignRight"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatAlignRightBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatAlignCenter,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "AlignCenter"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatAlignCenterBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatAlignLeft,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "AlignLeft"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatAlignLeftBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        style: {
                          borderRight: "1px solid rgba(0,0,0,0.08)",
                          height: "25px",
                          marginTop: "6px",
                          marginRight: "3px"
                        },
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "3",
                        xs: "no",
                        children: null
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickStrikethrough,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "Color"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.textFormatBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatUnderlined,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "UnderLine"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatUnderlinedBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatItalic,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "Italic"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatItalicBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatBold,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "Bold"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatBoldBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        style: {
                          borderRight: "1px solid rgba(0,0,0,0.08)",
                          height: "25px",
                          marginTop: "6px",
                          marginRight: "3px"
                        },
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "3",
                        xs: "no",
                        children: null
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "6",
                        xs: "no",
                        children: React.createElement(IconButton$BtsCore.make, {
                              padding: "6",
                              onClick: clickFormatSize,
                              children: null
                            }, React.createElement(Tooltip$BtsCore.make, {
                                  location: "top",
                                  backgroundColor: "rgba(255,0,0,0.8)",
                                  children: "Size"
                                }), React.createElement(IconAction$BtsCore.make, {
                                  animation: "leftRight",
                                  src: Icons$BtsCore.formatSizeBlack
                                }))
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "6",
                        xs: "auto",
                        children: null
                      }, React.createElement(SelectStandard$BtsCore.make, {
                            top: "0",
                            right: "0",
                            bottom: "0",
                            left: "0",
                            borderTop: "10",
                            borderBottom: "4",
                            enterBorderColor: "rgba(255,0,0,0.8)",
                            downBorderColor: "rgba(255,0,0,0.6)",
                            borderColor: "rgba(0,0,0,0.2)",
                            value: state.outValue,
                            disabled: disabled,
                            onClick: clickOutShow,
                            children: /* tuple */[
                              state.showOut ? React.createElement(SelectMenu$BtsCore.make, {
                                      top: "50%",
                                      transform: "translate(0, -50%)",
                                      width: "238",
                                      maxHeight: "280",
                                      minHeight: "0",
                                      children: $$Array.map((function (outitem) {
                                              return React.createElement(MenuIcon$BtsCore.make, {
                                                          disablePadding: outitem.disablePadding,
                                                          onClick: (function (param) {
                                                              return Curry._1(clickItemOutValue, outitem.value);
                                                            }),
                                                          children: /* tuple */[
                                                            React.createElement(IconGeneral$BtsCore.make, {
                                                                  src: outitem.icon
                                                                }),
                                                            outitem.value
                                                          ]
                                                        });
                                            }), state.outitems)
                                    }) : null,
                              React.createElement(IconGeneral$BtsCore.make, {
                                    animation: IconAnimation$BtsCore.topDownRorate(state.showOut),
                                    src: Icons$BtsCore.arrowDownBlack
                                  })
                            ]
                          }), React.createElement(BackgroundBoard$BtsCore.make, {
                            showBackground: state.showOut,
                            backgroundColor: "transparent",
                            onClick: clickOutShow
                          })))
            });
}

var make = ToolBar;

export {
  reducer ,
  initialState ,
  make ,
  
}
/* react Not a pure module */
