// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Tab$BtsCore from "../../wwwroot/js/material-ui/core/Tabs/Tab.bs.js";
import * as Data$BtsCore from "../../wwwroot/js/features/Data.bs.js";
import * as Path$BtsCore from "../../wwwroot/js/features/Path.bs.js";
import * as Tabs$BtsCore from "../../wwwroot/js/material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../wwwroot/js/material-ui/icon/Icons.bs.js";
import * as Axiosapi$BtsCore from "../../wwwroot/js/features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../wwwroot/js/material-ui/core/Grid/GridItem.bs.js";
import * as Together$BtsCore from "../../wwwroot/js/styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as IconAction$BtsCore from "../../wwwroot/js/material-ui/core/IconStyle/IconAction.bs.js";
import * as NewFacetube$BtsCore from "../../wwwroot/js/example/Facebook/NewFacetube.bs.js";
import * as GridContainer$BtsCore from "../../wwwroot/js/material-ui/core/Grid/GridContainer.bs.js";
import * as SnackbarYoutube$BtsCore from "../../wwwroot/js/material-ui/core/Snackbar/SnackbarYoutube.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormLoad */1 :
          return {
                  formLoad: !state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: action[0],
                  formHeight: action[1],
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionPermissItems */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickItemTab */2 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: List.mapi((function (i, tabtitem) {
                          return {
                                  showTabt: index === i,
                                  tabImage: tabtitem.tabImage,
                                  tabPath: tabtitem.tabPath
                                };
                        }), state.tabitems),
                  index: index,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */3 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_tabitems = /* :: */[
  {
    showTabt: false,
    tabImage: Icons$BtsCore.descriptionBlack,
    tabPath: Path$BtsCore.proformPath
  },
  /* :: */[
    {
      showTabt: false,
      tabImage: Icons$BtsCore.tourBlack,
      tabPath: Path$BtsCore.protourPath
    },
    /* [] */0
  ]
];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  tabitems: initialState_tabitems,
  index: 1,
  showYoutube: false,
  youtubeText: ""
};

function Protour$BtsCore(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), Curry._1(dispatch, /* ActionShowProgress */2)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var clickItemTab = React.useCallback((function (i) {
          return (function (tabPath) {
              Curry._1(dispatch, /* ClickItemTab */Block.__(2, [i]));
              return ReasonReactRouter.push(tabPath);
            });
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: React.createElement(GridItem$BtsCore.make, {
                                    top: "0",
                                    right: "24",
                                    bottom: "0",
                                    left: "24",
                                    xs: "auto",
                                    children: React.createElement(Tabs$BtsCore.make, {
                                          id: "bus-",
                                          index: state.index,
                                          short: 20,
                                          height: "3",
                                          children: $$Array.of_list(List.mapi((function (i, tabtitem) {
                                                      return React.createElement(Tab$BtsCore.make, {
                                                                  showTab: tabtitem.showTabt,
                                                                  maxWidth: "111.6",
                                                                  borderRadius: "15",
                                                                  id: "bus-" + String(i),
                                                                  animationName: "none",
                                                                  onClick: (function (param) {
                                                                      return Curry._2(clickItemTab, i, tabtitem.tabPath);
                                                                    }),
                                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                                        width: "28",
                                                                        height: "28",
                                                                        animation: "leftRight",
                                                                        src: tabtitem.tabImage
                                                                      })
                                                                });
                                                    }), state.tabitems))
                                        })
                                  })
                            })
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Protour$BtsCore;

export {
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
